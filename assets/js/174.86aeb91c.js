(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{447:function(t,a,e){"use strict";e.r(a);var s=e(13),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"mysql和mysqld通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql和mysqld通信"}},[t._v("#")]),t._v(" mysql和mysqld通信")]),t._v(" "),a("p",[t._v("可供选择的协议protocol： tcp、socket、pipe、memory")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("mysql和mysqld在同一台主机上，采用sock通信")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("unix :\n\tmysql  --\x3e mysql.sock --\x3e mysqld\nwindows:\n\tmysql  --\x3e memory(pipe) --\x3emysqld\n")])])])]),t._v(" "),a("li",[a("p",[t._v("mysql和mysqld不在同一台主机上，采用TCP/IP协议")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mysql:\n\t-uroot  -h172.16.100.1\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"存储引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎"}},[t._v("#")]),t._v(" 存储引擎")]),t._v(" "),a("blockquote",[a("p",[t._v("存储引擎不是数据库级别的概念，是表级别的概念")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("MyISAM（无事务，表锁）")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".frm   表结构定义\n.MYD    表数据\n.MYI    索引\n\n创建新的数据库后有一个默认的mysql数据库，里面的表大部分都是myisam存储引擎\n")])])])]),t._v(" "),a("li",[a("p",[t._v("InnoDB")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("每表使用一个独立的表空间文件（innodb_file_per_table要开启，默认为OFF）\n.frm        表结构\n.ibd         表空间（数据和索引）\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"服务器端启动命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务器端启动命令"}},[t._v("#")]),t._v(" 服务器端启动命令")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mysqld\nmysqld_safe（大多数情况下使用的是这个安全线程的方式，而不是mysqld，linux上可以查看init.d/mysqld里面的内容）\nmysqld_multi(多实例)：一台服务器上启用多个mysql实例，使用的是不同的端口\n")])])]),a("h2",{attrs:{id:"配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),a("p",[t._v("#mysqld --help --verbose       #可以显示mysqld的 可以写到配置文件中的选项")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("my.cnf 配置文件的查找顺序")]),t._v(" "),a("ol",[a("li",[t._v("/etc/my.cnf")]),t._v(" "),a("li",[t._v("/etc/mysql/my.cnf")]),t._v(" "),a("li",[t._v("$MYSQL_HOME/my.cnf")]),t._v(" "),a("li",[t._v("--default-extra-file=/path-to-somefile")]),t._v(" "),a("li",[t._v("~/.my.cnf")])]),t._v(" "),a("p",[t._v("生效顺序：最后一个查找到的是最终生效的配置（什么意思，当几个位置查到的同样的配置项内容不同时以最后的生效么）")])]),t._v(" "),a("li",[a("p",[t._v("配置文件中的配置段")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("【mysqld】\n【mysqld_safe】\n【client】    #对所有客户端程序生效（是不是包含navicat），下面mysql只对mysql客户端生效\n【mysql】     #只对mysql客户端生效，上面client对所有客户端生效\n    default-extra-file、default_extra_file        #斜线写在中间和写在下面都对，不过尽量统一格式\n    innodb_file_per_table和innodb-file-per-table 这两种写法应该也都对（不过这个应该是写在mysqld下的配置项）\n")])])])]),t._v(" "),a("li",[a("p",[t._v("可动态调整的参数：不需要重启服务器即可生效")]),t._v(" "),a("p",[t._v("全局：对当前会话无效，只对新建立会话有效")]),t._v(" "),a("p",[t._v("会话：即时生效，但只对当前会话有效")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("set global|session  变量名='value'     默认不写global|session是不是默认就是session？？？\n")])])])]),t._v(" "),a("li",[a("p",[t._v("静态调正: 需要重启服务器才能生效")]),t._v(" "),a("p",[t._v("1，有些必须要写在配置文件中（因为配置后重启服务器就没了）")]),t._v(" "),a("p",[t._v("2，有些只能通过参数传递给mysqld，无法写入配置文件")])])]),t._v(" "),a("p",[t._v("验证用户的连接是否合法，经常需要验证主机名，（当不需要主机名来进行验证的话）为了加速mysql服务器的连接性能，可以在启动mysql的时候添加参数：--skip-name-resolve  这样用户连接的时候就不用解析主机名了")]),t._v(" "),a("h2",{attrs:{id:"用户和权限配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用户和权限配置"}},[t._v("#")]),t._v(" 用户和权限配置")]),t._v(" "),a("p",[t._v("用户的密码默认是使用password()加密存储的")]),t._v(" "),a("p",[a("strong",[t._v("show grants for root@localhost;       查看用户权限")])]),t._v(" "),a("h3",{attrs:{id:"与帐号、权限相关的6张表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与帐号、权限相关的6张表"}},[t._v("#")]),t._v(" 与帐号、权限相关的6张表")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("user：用户帐号、全局权限\ndb：数据库级别的权限定义\nhost：现在已经废弃了\ntables_priv：表级别权限\ncolumns_priv：列级别的权限\nprocs_priv：存储过程和存储函数相关的权限\nproxies_priv: 偶尔可能会用到，mysql的代理用户权限\n\n通配符：172.16.%.%\n")])])]),a("h3",{attrs:{id:"权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权限"}},[t._v("#")]),t._v(" 权限")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("reload：reload_priv ，可以使用flush privleges;\nsuper：服务器级别的管理权限，设定一个mysql的从服务器的主服务器是谁、杀死线程、删除二进制日志，这个权限不要轻易授予 \nusage：没有任何权限，只允许登录mysql；使用create user之后默认usage权限\nfile：file_priv，访问服务器文件\n\ncreate_routine：创建存储过程或存储函数\nalter_routine：修改存储过程或存储函数\nexecute：执行存储过程或存储函数\n\ncreate_view：创建视图\nshow_view：显示视图\n\nindex：给表创建索引\ncreate_temporary_tables：创建临时表，临时表指的是内存表，通常大小是有限的\ntrigger：触发器\n")])])]),a("h3",{attrs:{id:"创建用户、赋权"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建用户、赋权"}},[t._v("#")]),t._v(" 创建用户、赋权")]),t._v(" "),a("ul",[a("li",[t._v("create user jim@localhost identified by 'jim123';")])]),t._v(" "),a("p",[t._v("​\t#identified可以省略，默认为usage权限；create user默认会触发flush privileges")]),t._v(" "),a("ul",[a("li",[t._v("grant all privileges on [table|function|procedure] db.* to ''@localhost identified by 'jim123' [require ssl] with  grant option;")])]),t._v(" "),a("p",[t._v("​\t\t1，如果用户已经存在（如create user时已经identified过）,此处就不需要identified了(否则修改掉密码了);")]),t._v(" "),a("p",[t._v("​\t\t\t\t#db.*中*代表了表、存储函数、存储过程")]),t._v(" "),a("p",[t._v("​\t\t2，with options (除了with grant option之外)")]),t._v(" "),a("p",[t._v("​\t\t\t\t| MAX_QUERIES_PER_HOUR count                          \t# "),a("strong",[t._v("用来限制用户每小时运行的查询数量")])]),t._v(" "),a("p",[t._v("​\t\t\t\t| MAX_UPDATES_PER_HOUR count                         \t#"),a("strong",[t._v("用来限制用户每小时的修改数据库数据的数量")])]),t._v(" "),a("p",[t._v("​\t\t\t\t| MAX_CONNECTIONS_PER_HOUR count                    #"),a("strong",[t._v("用来控制用户每小时打开新连接的数量")])]),t._v(" "),a("p",[t._v("​\t\t\t\t| MAX_USER_CONNECTIONS count                         \t# "),a("strong",[t._v("限制有多少用户连接MYSQL服务器")])]),t._v(" "),a("ul",[a("li",[t._v("insert into mysql.user ...")])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("p",[t._v("​\tgrant "),a("strong",[t._v("update(age)")]),t._v(" on mysql_test.test to 'tom'@'%'     #只允许修改mysql_test数据库test表的age字段")]),t._v(" "),a("p",[t._v("​\t"),a("strong",[t._v("show grants for root@localhost;       查看用户权限")])]),t._v(" "),a("h3",{attrs:{id:"删除用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除用户"}},[t._v("#")]),t._v(" 删除用户")]),t._v(" "),a("p",[t._v("drop user 'username'@'host';")]),t._v(" "),a("p",[t._v("drop user ''@localhost;       \t\t\t\t#删除匿名用户，这种亲测是可以的")]),t._v(" "),a("h3",{attrs:{id:"重命名用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重命名用户"}},[t._v("#")]),t._v(" 重命名用户")]),t._v(" "),a("p",[t._v("rename user 'jeffrey'@'localhost' to 'jeff'@'127.0.0.1';")]),t._v(" "),a("h3",{attrs:{id:"收回权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#收回权限"}},[t._v("#")]),t._v(" 收回权限")]),t._v(" "),a("p",[t._v("revoke select on mysql_test.* from 'tom'@'%';")]),t._v(" "),a("h2",{attrs:{id:"管理员密码遗忘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管理员密码遗忘"}},[t._v("#")]),t._v(" 管理员密码遗忘")]),t._v(" "),a("p",[t._v("如果没有重要数据，可直接重新初始化")]),t._v(" "),a("p",[t._v("找回密码：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("service mysqld stop")])]),t._v(" "),a("li",[a("p",[t._v("在启动脚本mysqld中或是my.cnf 中添加 --skip-grant-tables(跳过授权表)  --skip-networking(跳过网络，因为此时没有密码，设置此时mysql不允许别人通过网络连接，只能是客户端和服务器在同一台主机上)")])]),t._v(" "),a("li",[a("p",[t._v("启动mysql后修改密码")]),t._v(" "),a("p",[t._v("set password for root@localhost = password('123456'); 此时不要使用这种方法，因为已经跳过了授权表，使用下面这种：")]),t._v(" "),a("p",[t._v("update user set authentication_string=password('123456') where user='root';      密码"),a("strong",[t._v("原来是password字段，现在改成了               authentication_string字段")]),t._v("，原来是password=password('123456') ,第一个password是mysql中密码保存的字段名称")])]),t._v(" "),a("li",[a("p",[t._v("关闭mysql， 两个参数-skip-grant-tables(跳过授权表)  --skip-networking恢复正常后，启动mysql")])])]),t._v(" "),a("h2",{attrs:{id:"可选数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可选数据类型"}},[t._v("#")]),t._v(" 可选数据类型")]),t._v(" "),a("h3",{attrs:{id:"数值型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值型"}},[t._v("#")]),t._v(" 数值型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("精确数值")]),t._v(" "),a("p",[t._v("tinyint：1个字节\t\t\t#tinyint(1) 数值型后面的数值对能存取多大数字是没有意义的，只是显示几位数字的")]),t._v(" "),a("p",[t._v("smallint：2个字节")]),t._v(" "),a("p",[t._v("mediumint：3个字节")]),t._v(" "),a("p",[t._v("int：4个字节\t\t\t\t\t#int后的数值只是显示的位数")]),t._v(" "),a("p",[t._v("bigint：8个字节")]),t._v(" "),a("p",[t._v("decimal：精确十进制型，如1.11")]),t._v(" "),a("p",[t._v("zerofill：自动补0")])]),t._v(" "),a("li",[a("p",[t._v("近似数值")]),t._v(" "),a("p",[t._v("float：单精度浮点型-4byte               #float(3,2) 整体3位、小数点后2位")]),t._v(" "),a("p",[t._v("double：双精度-8byte")]),t._v(" "),a("p",[t._v("real：实数")])])]),t._v(" "),a("p",[t._v("​\t   单精度浮点数和双精度区别：https://zhidao.baidu.com/question/679884920889618612.html")]),t._v(" "),a("ul",[a("li",[t._v("bit：按位存储")])]),t._v(" "),a("h3",{attrs:{id:"字符型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符型"}},[t._v("#")]),t._v(" 字符型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("定长")]),t._v(" "),a("p",[t._v("char(n)：不区分大小写，可以全部索引   \t\t\t#n是字符的个数，不是字节长度,n最大255")]),t._v(" "),a("p",[t._v("binary：区分大小写")])]),t._v(" "),a("li",[a("p",[t._v("变长")]),t._v(" "),a("p",[t._v("varchar(n)：不区分大小写\t\t#n最大为65535，varchar后面有一个结束符")]),t._v(" "),a("p",[t._v("​\t \t\t#只存储了ab，为了不存储成这中ab000000，所以varchar需要一个结束符")]),t._v(" "),a("p",[t._v("varbinary：区分大小写")])])]),t._v(" "),a("p",[t._v("​")]),t._v(" "),a("ul",[a("li",[t._v("大字符（二进制？）：")])]),t._v(" "),a("p",[t._v("​\t\ttext：不区分大小写，不能全部索引：")]),t._v(" "),a("p",[t._v("​\t\t\t\ttinytext")]),t._v(" "),a("p",[t._v("​\t\t\t\ttext")]),t._v(" "),a("p",[t._v("​\t\t\t\tmediumtext")]),t._v(" "),a("p",[t._v("​\t\t\t\tlongtext")]),t._v(" "),a("p",[t._v("​\t\tblob：区分大小写")]),t._v(" "),a("p",[t._v("​\t\t\t\ttinyblob(255-byte)")]),t._v(" "),a("p",[t._v("​\t\t\t\tblob(64kb)")]),t._v(" "),a("p",[t._v("​\t\t\t\tmediumblob(16M)")]),t._v(" "),a("p",[t._v("​\t\t\t\tlongblob(4G)")]),t._v(" "),a("h3",{attrs:{id:"两个内置类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两个内置类型"}},[t._v("#")]),t._v(" 两个内置类型")]),t._v(" "),a("ul",[a("li",[t._v("ENUM：枚举，在给定的里面选择，如ENUM('M','F')，该字段只能填男、女其他的字符无法填写")]),t._v(" "),a("li",[t._v("SET：集合，只能在给定的字符里面任意组合，如set('M','F')，可以写m、f、mf、fm、ff（这一种好像不太允许？）等")])]),t._v(" "),a("h3",{attrs:{id:"日期时间型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期时间型"}},[t._v("#")]),t._v(" 日期时间型")]),t._v(" "),a("ul",[a("li",[t._v("date：'CCYY-MM-DD' FORMAT")]),t._v(" "),a("li",[t._v("time: 'HH:MM:SS' FORMAT")]),t._v(" "),a("li",[t._v("datetime: 'CCYY-MM-DD   HH:MM:SS'   FORMAT")]),t._v(" "),a("li",[t._v("timestamp: 时间戳")]),t._v(" "),a("li",[t._v("year: 'CCYY' OR 'YY' FORMAT  #year(4)  or year(2)")])]),t._v(" "),a("h3",{attrs:{id:"域属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#域属性"}},[t._v("#")]),t._v(" 域属性")]),t._v(" "),a("h3",{attrs:{id:"修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),a("h2",{attrs:{id:"特殊字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊字段"}},[t._v("#")]),t._v(" 特殊字段")]),t._v(" "),a("h3",{attrs:{id:"自增长的列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自增长的列"}},[t._v("#")]),t._v(" 自增长的列")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("不能为空")])]),t._v(" "),a("li",[a("p",[t._v("一定要创建索引，要么是主键索引，要么是唯一键索引")]),t._v(" "),a("p",[t._v("#一个表只能有一个主键（数据在该列唯一而且不能为空），但是可以有多个唯一键（数据在该列唯一但可以为空）")]),t._v(" "),a("p",[t._v("#primary和unique定义后默认包含创建索引，index则是明确定义索引")])])]),t._v(" "),a("h2",{attrs:{id:"服务器变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务器变量"}},[t._v("#")]),t._v(" 服务器变量")]),t._v(" "),a("h3",{attrs:{id:"全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局变量"}},[t._v("#")]),t._v(" 全局变量")]),t._v(" "),a("p",[t._v("my.cnf")]),t._v(" "),a("p",[t._v("show global variables或者是SELECT @@global.sql_mode  #两个@@是服务器变量，一个@是用户变量")]),t._v(" "),a("h3",{attrs:{id:"会话变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#会话变量"}},[t._v("#")]),t._v(" 会话变量")]),t._v(" "),a("p",[t._v("只对会话变量，会话终止，变量就失效了")]),t._v(" "),a("p",[t._v("show [SESSION] variables或者SELECT @@session.SQL_mode(SELECT @@SQL_mode不加session表示的就是会话)")]),t._v(" "),a("h2",{attrs:{id:"shell中操作mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shell中操作mysql"}},[t._v("#")]),t._v(" shell中操作mysql")]),t._v(" "),a("p",[t._v("mysql -e：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mysql -e 'create database edb'\nmysql -e \"insert ... values (' .'..'. ' ) \"            \n\t#注意单引号和双引号的问题，如果'insert也是单引号可能会报错，此处的单引号和字符串的单引号误认为是一对\n")])])]),a("h2",{attrs:{id:"mysql通用操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql通用操作"}},[t._v("#")]),t._v(" mysql通用操作")]),t._v(" "),a("p",[a("strong",[t._v("help")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("help create database、table;            创建数据库帮助\nheLp create index                  另：索引是不能被修改的，只能创建、删除、查看\nhelp drop index\nhelp alter database;                如何修改数据库帮助\n     help中的'UPGRADE DATA DIRECTORY NAME' 在旧数据库迁到新数据库上时，需要升级数据字典名称\n\nhelp drop database;                删除数据库帮助\nhelp insert\nhelp create user\nhelp rename user            #给用户重命名\n")])])]),a("p",[a("strong",[t._v("show")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("show engines;            查看支持的所有存储引擎，support里面的default是默认引擎（创建表是不指定引擎时使用）\n\t结果显示格式：引擎 -- 是否支持 -- 描述 -- 事务  -- 分布式事务  -- 保存点\n\tcsv：csv文本文件\n\tarchive：用来归档的，以后用来数据挖掘，不再修改了\n\tmemory：内存引擎，将内存中空间拿来用来创建临时表\n\t还有一些第三方存储引擎，也可以加进去\nshow table status;\nshow table status like 'user'      :    查看user表的属性信息\n\nstatus：   查看当前用户的登录信息\nshow status\n\nshow  variables （like  'datadir' / like '%dir%'）\nshow CHARACTER set;        查看当前服务器所支持的所有字符集\nshow COLLATION                 显示各个字符集下的排序规则\nshow global variables like 'sql_mode'        查看sql模型\nshow indexes from test;                #显示表的索引\n\nshow create view           \t\t\t\t#查看创建view使用的语句\nshow create table test\\G;\t\t\t\t#查看建表属性\ndesc test;                        \t\t#查看表结构\n\nunix_timestamp(datetime)            \t#将datetime转换为时间戳\nFROM_UNIXTIME(timestamp);        \t\t#将时间戳转换为datetime\n")])])]),a("p",[a("strong",[t._v("select")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select database();                带括号的是mysql的内置函数        存储函数执行：select fun();\nselect user()\nselect last_insert_id()            查看最后自增长的ID；清空表之后再insert，id序号还是接着增加，不会重新开始，就是因为这个\n")])])]),a("h2",{attrs:{id:"table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#table"}},[t._v("#")]),t._v(" table")]),t._v(" "),a("h3",{attrs:{id:"创建表的三种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建表的三种方式"}},[t._v("#")]),t._v(" 创建表的三种方式")]),t._v(" "),a("blockquote",[a("p",[t._v("help create table")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("方式一：直接定义一张空表")]),t._v(" "),a("p",[t._v("primary(id,name)    \t\t\t连个字段联合起来做主键，primay key这个要单独写，不能在id或是name里面定义"),a("br"),t._v("\nunique(name)            \t\t\t定义为唯一键\nindex(age)            \t\t\t\t在age字段上创建索引\nAUTO_INCREMENT =        \t从哪个值开始自动增长")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("create table test(ID INT UNSIGNED AUTO_INCREMENT NOT NULL DEFAULT 'XX' PRIMARY KEY ,NAME CHAR(20))\n\t# not null 写在unsigned的后面，   PRIMARY KEY中的key不能省略\n\ncreate table test (id int unsigned not null primary key auto_increment,name varchar(50),comment varchar(50),unique  key `name`(name) ) engine=InnoDB;            #name是反引号\n")])])]),a("ul",[a("li",[a("p",[t._v("示例一：建表时指定data_dircetory和index_directory")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("CREATE TABLE `hr_positive` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `name` varchar(20) NOT NULL COMMENT '姓名',\n  `enter_date` date NOT NULL COMMENT '入职日期',\n  `positive_date` date NOT NULL COMMENT '转正日期',\n  `remarks` varchar(255) DEFAULT NULL COMMENT '备注',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `name_enter_date` (`name`,`enter_date`)\n) ENGINE=MyISAM AUTO_INCREMENT=47 DEFAULT CHARSET=utf8mb4 DATA DIRECTORY='/web/mysqldata/' INDEX DIRECTORY='/web/mysqldata';\n")])])])]),t._v(" "),a("li",[a("p",[t._v("示例二：建表时指定分区(要在/web/mysqldata/ 目录下先建一个wechat_statistic的文件夹，root、777):")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("CREATE TABLE `wechat_statistic` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `wxh_name` varchar(255) NOT NULL COMMENT '微信号',\n  `flag` enum('0','1','2') DEFAULT NULL COMMENT '0,未知，1，自营，2，代运营',\n  `ref_date` date NOT NULL COMMENT '数据的日期',\n  `user_source` int(10) NOT NULL COMMENT '用户来源',\n  `cumulate_user` int(10) NOT NULL COMMENT '总用户量',\n  PRIMARY KEY (`id`,`ref_date`),\n  UNIQUE KEY `wxh_name,ref_date,user_source` (`wxh_name`,`ref_date`,`user_source`) USING BTREE\n) ENGINE=MyISAM   DEFAULT CHARSET=utf8\nPARTITION BY RANGE (to_days(ref_date))\n(PARTITION p0 VALUES LESS THAN (736815) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p1 VALUES LESS THAN (736829) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p2 VALUES LESS THAN (736846) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p3 VALUES LESS THAN (736860) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p4 VALUES LESS THAN (736876) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p5 VALUES LESS THAN (736890) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p6 VALUES LESS THAN (736907) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p7 VALUES LESS THAN (736921) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p8 VALUES LESS THAN (736938) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p9 VALUES LESS THAN (736952) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p10 VALUES LESS THAN (736968) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p11 VALUES LESS THAN (736982) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p12 VALUES LESS THAN (736999) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p13 VALUES LESS THAN (737013) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p14 VALUES LESS THAN (737029) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p15 VALUES LESS THAN (737043) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p16 VALUES LESS THAN (737060) DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM,\n PARTITION p999 VALUES LESS THAN MAXVALUE DATA DIRECTORY = '/web/mysqldata/wechat_statistic' INDEX DIRECTORY = '/web/mysqldata/wechat_statistic' ENGINE = MyISAM);\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("方式二：从其他表中查询出数据，并以之创建新表")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("create table test_copy select * from test where id >= 2;            #表结构很多定义会不在存在了\n\n同理：insert into teacher (tname,sex,age) select name,sex,age from students where age >=20;    #插入新表中时要指定字段\n")])])])]),t._v(" "),a("li",[a("p",[t._v("方式三：以其他表为模版创建一个空表")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("create table test_3 like test;                #创建一个test_3的空表，表结构是完全一样的\n\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"alter修改表结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alter修改表结构"}},[t._v("#")]),t._v(" alter修改表结构")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("alter table test add   index(id) ;            \t#添加索引\nalter table test drop   index id_2 ;          \t#删除索引，id_2是索引的名称\nalter table test add  age int not null;        \t#添加一栏age（不用加column）\nalter table test add date datetime default '2000-10-10 10:00:00'  after ages;       添加一datetime字段\nalter table test drop age;                            删除一栏\nalter table test modify  age  int(11) not null unique key ;   \n\t#修改列的属性，添加了unique key，没有 'age'(age)这些\n\t#修改的时候最好加上原来的属性，测试的时候至少要加一个int才不会报错\nalter table test modify ages int after name;        修改字段位置，要加属性int\nalter table test add unique key (age);                添加一个索引\nalter table test change age ages int ;                 修改字段名称，后面没有int添加不上\nalter table test rename test_new;                         修改表名\nrename table test_new to  test;                         help rename里面有解释\nalter table test engine=myisam;                         修改表引擎    \nalter table student add foreign key foreign_cid ( CID) references courses (CID);        \n\t#建立外间约束，建立外键后往student中的CID列插入数据时，该数据在courses时才有效，否则会报错无法插入；只有innodb才支持外键;  问题：怎么删除外键？？？\n")])])]),a("h3",{attrs:{id:"表操作-增"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表操作-增"}},[t._v("#")]),t._v(" 表操作--增")]),t._v(" "),a("p",[t._v("insert")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("insert into test (id,name) values ('2','aaa'),('3','bbb'),('4','ccc');  #只要id为自增长，就可以不写id让其自动添加\n\t奇怪此处(`id`,`name`) 加反引号或是 values和value是否加s，  任意组合都可以正常执行\n\t\ninsert into teacher (tname,sex,age) select name,sex,age from students where age >=20;    #批量插入\n\ninsert into插入是如果已经存在是无法插入的，此时使用replace into，不存在插入，存在则替换\n")])])]),a("h3",{attrs:{id:"表操作-删"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表操作-删"}},[t._v("#")]),t._v(" 表操作--删")]),t._v(" "),a("p",[t._v("delete：")]),t._v(" "),a("p",[t._v("delete from aa;         \t\t清空表 ,delete有一个内置法则，不加where条件不让删除")]),t._v(" "),a("p",[t._v("truncate:   清空表")]),t._v(" "),a("p",[t._v("truncate tb_name :清空表并重置auto_increment计数器")]),t._v(" "),a("h3",{attrs:{id:"表操作-改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表操作-改"}},[t._v("#")]),t._v(" 表操作--改")]),t._v(" "),a("p",[t._v("update：")]),t._v(" "),a("p",[t._v("update aa as a,aa as b set a.c1 = b.c2,a.c2 = b.c1 where a.c1 = b.c1;       两列数据互换")]),t._v(" "),a("h3",{attrs:{id:"表操作-查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表操作-查"}},[t._v("#")]),t._v(" 表操作--查")]),t._v(" "),a("p",[t._v("select")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select now() ;                查看当前时间\n\nselect * from courses,student;            直接显示两张表中内容（笛卡尔乘积）；可以连接3张或更多张表\n\nselect name,course from student,courses where student.cid=courses.cid; 通过两张表中的cid查找student中name对应课程\n\t1, select * from courses,student; \n\t2, select * from courses,student where student.cid=courses.cid;\n\t3, select student.name,courses.course from student,courses where student.cid=courses.cid;  \n\t\t如果两张表都有必须加表名\n\t4，select s.name,c.course from student as s,courses as c where s.cid=c.cid;        #两张表取别名\n\nselect distinct  id from student;            disctinct去重\nselect  name 'xingming' from student;            #自定义'xingming’栏\n")])])]),a("p",[a("strong",[t._v("from子句")]),t._v("：后面可以是表、多表、其他的select语句")]),t._v(" "),a("h4",{attrs:{id:"where语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#where语句"}},[t._v("#")]),t._v(" "),a("strong",[t._v("where语句")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("条件运算符")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("where age =20;        当age是数值类型的时候，20 一定不能加引号，（字符比较的时候一定要加引号\nwhere age+1 >20;\n\n\n多条件：and（&&）、or（||）、not（！）\n\twhere not age >20;   等同于 where age <= 20;\n\twhere not age >20 and not sex='M' \n\twhere not (age >20 or sex='M')    #和上面的是同一个意思，此处加一个括号 \n")])])])]),t._v(" "),a("li",[a("p",[t._v("null判断")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("where name is null;     \t#name为空的，is not null为不空；跟null比较的时候不能使用=，name = null是过滤不出来的\n")])])])]),t._v(" "),a("li",[a("p",[t._v("between和in")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("where id between 2 and 5;            \t\t#id在2和5之间\nwhere id in (1,5);                            #id是1或是5\n")])])])]),t._v(" "),a("li",[a("p",[t._v("like和rlike")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("where name like 'y%';                    #所有以y开头的name\nwhere name like 'y____';                    #以y开头的四个字符的名称    下划线'_'匹配单个字符\n\nwhere name rlike '^[ya].*$';            #正则表达式，以y或者以a开头的name；rlike和regexp代表正则表达式\n\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"order-by排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#order-by排序"}},[t._v("#")]),t._v(" order by排序")]),t._v(" "),a("p",[t._v("默认是asc升序，也可以desc降序")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select name from test order by name desc;\t\t#排序，order by后跟字段名称\n")])])]),a("h4",{attrs:{id:"as别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#as别名"}},[t._v("#")]),t._v(" as别名")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select  name  as new_name from test  order by  name  desc;            #as后跟别名\n\nselect 2+1;        进行算数运算\nselect 2+1 as sum; 和    select 2+1  sum;    这种是一样的       \n")])])]),a("h4",{attrs:{id:"limit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limit"}},[t._v("#")]),t._v(" limit")]),t._v(" "),a("p",[t._v("格式：limit [offset,]count")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select  name  as new_name from test  order by  name  desc limit 2;          结果只返回前2个\n                                                          limit 2,3;    #2是偏移量，跳过前2个，然后取出3个值 \n")])])]),a("h4",{attrs:{id:"聚合计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合计算"}},[t._v("#")]),t._v(" 聚合计算")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select avg(ages) from test ;            计算所有人的 平均年龄\n\t#where id >=2;    计算id大于等于2的人的 平均年龄，如求女同学的平均年龄\n\nselect max(ages) from test;                #最大值\n\nselect min(ages) from test;                #最小值\n\nselect sum(ages) from test;                #求和\n\nselect count(*) from test;                    #条目数量\n\t#select count(ages) from test;                    #条目数量\n")])])]),a("h4",{attrs:{id:"group-by"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#group-by"}},[t._v("#")]),t._v(" group by")]),t._v(" "),a("p",[t._v("主要是做聚合计算的，前面一般有相应的 数学计算操作，"),a("strong",[t._v("GROUP BY子句必须在WHERE 子句之后，ORDER BY 子句之前。")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select avg(age)   from test group by sex;            求出男同学和女同学的平均年龄\n         ,sex\t\t\t\t\t\t\t\t\t\t\t显示的更直观一点，也可以不要\n\nselect count(*) from test group by sex;                统计男、女同学的个数\t \n")])])]),a("p",[t._v("对group by的结果进行过滤，不能使用where，要使用"),a("strong",[t._v("having")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select count(*) from test group by sex having count(*)>=2;     计算总数超过2个的性别群体，也可用别名比较，见下例\n\nselect count(*) as zongshu,sex from test group by sex having zongshu>=2;        计算总数超过2个的性别群体\n\nselect cid1 from students group by cid1 having count(cid1) >=2;   将选课超过2个人的课程挑选出来\n")])])]),a("p",[t._v("查询weixin表中personal_wxh重复超过5次，而且status > -2的项（不加as wxh_name也可以输出信息，不过有点乱）：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("SELECT GROUP_CONCAT(wxh_name)as wxh_name ,personal_wxh,count(*) as count ,status from weixin GROUP BY personal_wxh HAVING count > 5 and status > -2;\n")])])]),a("h4",{attrs:{id:"复合查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复合查询"}},[t._v("#")]),t._v(" 复合查询")]),t._v(" "),a("h5",{attrs:{id:"笛卡尔乘积"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#笛卡尔乘积"}},[t._v("#")]),t._v(" 笛卡尔乘积：")]),t._v(" "),a("p",[t._v("​\t\tselect * from courses,student;")]),t._v(" "),a("h5",{attrs:{id:"自然连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自然连接"}},[t._v("#")]),t._v(" 自然连接：")]),t._v(" "),a("p",[t._v("​\t\tselect s.name,c.course from "),a("strong",[t._v("student as s")]),t._v("**,courses** "),a("strong",[t._v("as c")]),t._v(" where s.cid=c.cid;       #条件相等")]),t._v(" "),a("h5",{attrs:{id:"外连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外连接"}},[t._v("#")]),t._v(" "),a("strong",[t._v("外连接：")])]),t._v(" "),a("p",[t._v("连接条件：使用ON设定连接条件，也可以用WHERE代替     #但是用where代替测试的时候会报错")]),t._v(" "),a("p",[t._v("​\t\tON：设定连接条件；\tWHERE：进行结果集记录的过滤")]),t._v(" "),a("p",[t._v("​")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("左外连接：left join 。。。on 。。。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select s.name,c.course from students as s left join courses as c on s.cid1=c.cid    \n\t#student表中有些同学选择的课程并不在courses的cid中，如果像上面‘where s.cid=c.cid’则这部分同学不会显示，这种方法的效果是，如果同学选的课程存在则显示，如果课程不存在则显示为null（多了几行name--null的项）\n")])])])]),t._v(" "),a("li",[a("p",[t._v("右外连接：right join 。。。 on 。。。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select s.name,c.course from students as s right join courses as c on s.cid1=c.cid\n\t（多了几行null--course的项）\n")])])])]),t._v(" "),a("li",[a("p",[t._v("内连接inner join .... on")])])]),t._v(" "),a("h5",{attrs:{id:"自连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自连接"}},[t._v("#")]),t._v(" "),a("strong",[t._v("自连接：")])]),t._v(" "),a("p",[t._v("select s.name as stu,c.name as teacher from students as s ,students as c where c.tid=s.sid;         #都是students中的name字段")]),t._v(" "),a("h4",{attrs:{id:"子查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子查询"}},[t._v("#")]),t._v(" 子查询")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("比较操作中使用子查询，子查询返回的结果是单个值，不光是一行，必须是单值")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select name from students where age > (select avg(age) from students);    #查找年龄大于平均年龄的同学\n")])])])]),t._v(" "),a("li",[a("p",[t._v("在in()，返回的结果可以不是单值")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select name from students where age in (select age from teachers);     #查找和老师年龄一样的学生\n")])])])]),t._v(" "),a("li",[a("p",[t._v("在from中使用子查询，from的不是一张表，而是一个子查询")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select name,age from (select name,age from studens) as t where t.age >=20;\n\t#对子查询的结果再次进行过来; 每张表必须有别名，不然会报错（将子查询的结果当成一个新表）\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"联合查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#联合查询"}},[t._v("#")]),t._v(" 联合查询")]),t._v(" "),a("p",[t._v("将查询的结果联合起来")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("(select name,age from students) union (select name,age from teachers);\n")])])]),a("h2",{attrs:{id:"index索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#index索引"}},[t._v("#")]),t._v(" index索引")]),t._v(" "),a("h3",{attrs:{id:"创建索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建索引"}},[t._v("#")]),t._v(" 创建索引")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("create index  name_on_test on test(name);       \t #在name字段上创建索引，索引主要是为了排序\n\t#。。。 on test(xx (5) asc);  len过大会占用很多内存，因为一个字段可能是写入5个字符，也可能写如90个字符，指定索引几个字符；默认是索引全部,默认是asc升序，也可以desc降序\n")])])]),a("p",[t._v("alter table test add  index(id) ;       添加索引")]),t._v(" "),a("h3",{attrs:{id:"删除索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除索引"}},[t._v("#")]),t._v(" 删除索引")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("drop index name_on_test on test;\n")])])]),a("p",[t._v("alter table test drop  index id_2 ;     \t\t删除索引，id_2是索引的名称")]),t._v(" "),a("h2",{attrs:{id:"视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[t._v("#")]),t._v(" 视图")]),t._v(" "),a("p",[t._v("视图的作用在mysql上作用是不大的，通常是跟安全相关的时候：限定用户只能够看见的字段")]),t._v(" "),a("p",[t._v("试图：一个视图就是存储下来的select语句，把这个select当作一张表来用")]),t._v(" "),a("p",[t._v("不允许往视图中插入数据，数据存在基表而不是在view中")]),t._v(" "),a("h3",{attrs:{id:"创建视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建视图"}},[t._v("#")]),t._v(" 创建视图")]),t._v(" "),a("p",[t._v("create view age_is_22 as select name from test where age=22;     #age_is_22是视图名称")]),t._v(" "),a("p",[t._v("show tables; 可以看到‘age_is_22’这张表")]),t._v(" "),a("p",[t._v("show table status\\G;        可以分辨哪个是view（ Comment: VIEW）")]),t._v(" "),a("h3",{attrs:{id:"删除视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除视图"}},[t._v("#")]),t._v(" 删除视图")]),t._v(" "),a("p",[t._v("drop view age_is_22 \t\t\t\t#删除视图")]),t._v(" "),a("h3",{attrs:{id:"物化视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#物化视图"}},[t._v("#")]),t._v(" 物化视图")]),t._v(" "),a("p",[t._v("物化视图：将select的结果保存下来，视图上没有索引")]),t._v(" "),a("p",[t._v("缺点：基表更新了，这个要重新创建，建议使用在基表更新不频繁的场景")]),t._v(" "),a("p",[t._v("mysql上不支持物化视图，mysql也不支持在视图上创建索引；在mysql上也不建议使用视图")]),t._v(" "),a("h2",{attrs:{id:"日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志"}},[t._v("#")]),t._v(" 日志")]),t._v(" "),a("p",[t._v("日志(show global variables like '%log%')（mysql默认情况下没有启用任何日志功能）")]),t._v(" "),a("h3",{attrs:{id:"错误日志-log-error"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误日志-log-error"}},[t._v("#")]),t._v(" 错误日志（log_error）")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mysqld启动和关闭过程的信息\n运行过程中的错误信息\n时间调度器运行一个事件时产生的信息\n从服务器 启动、停止 产生的信息也会在从服务器的错误日志中\nmy.ini里面定义了log_error,$datadir下也会默认生成一份 hostname.err错误日志文件,以配置文件中定义的为准\nlog_warnings为1时 是将warning信息也记录到error日志里，0是不记录\n")])])]),a("p",[t._v("与文件相关的variables一般服务器启动后不能set改的，如 set global log_error='xxx',会提示'log_error' is a read only variable,但是某项日志的开关配置(ON|OFF)经常可以直接set global;涉及到文件的操作一般都要重启服务器才能生效")]),t._v(" "),a("h3",{attrs:{id:"一般查询日志-general-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一般查询日志-general-log"}},[t._v("#")]),t._v(" 一般查询日志（general_log）")]),t._v(" "),a("p",[t._v("常用的select操作都会被记录，通常不开启，因为对繁忙的服务器会产生大量的这种日志")]),t._v(" "),a("p",[t._v("log_output默认为file，也可以将日志文件输出到tables或是none")]),t._v(" "),a("h3",{attrs:{id:"慢查询日志-slow-query-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#慢查询日志-slow-query-log"}},[t._v("#")]),t._v(" 慢查询日志（slow_query_log）")]),t._v(" "),a("p",[t._v("慢速，执行了很长时间的查询操作,超过'long_query_time'定义时间的查询都是慢查询（这里的语句     执行时长为实际的执行时间，而非在cpu上的执行时长，因而负载重的服务器上更容易产生慢查询）")]),t._v(" "),a("p",[t._v("log_output {table|file|none}   ;table和file能同时指定，用逗号隔开")]),t._v(" "),a("p",[t._v("show global variables like 'long_query_time';")]),t._v(" "),a("p",[t._v("select @@global.long_query_time;")]),t._v(" "),a("h3",{attrs:{id:"二进制日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二进制日志"}},[t._v("#")]),t._v(" 二进制日志")]),t._v(" "),a("p",[t._v("用于实现mysql复制、即时点恢复(恢复到一个指定的时间点上)")]),t._v(" "),a("p",[t._v("mysqlbinlog查看二进制格式的文件")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("二进制日志存储位置尽量和数据目录不要放在同一块磁盘上")]),t._v(" "),a("p",[t._v("1，因为写数据的时候也要写二进制日志，会有io竞争;数据可靠性的原因")]),t._v(" "),a("p",[t._v("2，当数据损坏的时候，二进制日志文件是好的")])])]),t._v(" "),a("p",[t._v("配置项：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("server-id = 1  （必选）")])]),t._v(" "),a("li",[a("p",[t._v("log-bin = C:\\mysql-5.7.19-winx64\\data\\mysql-bin  （必选）                        #mysql-bin是固定格式，mysql-bin不能变")]),t._v(" "),a("p",[t._v("这一句相当于同时定义三项：")]),t._v(" "),a("p",[t._v("​\tlog-bin =on")]),t._v(" "),a("p",[t._v("​\tlog_bin_basename = C:\\mysql-5.7.19-winx64\\data\\mysql-bin")]),t._v(" "),a("p",[t._v("​\tlog_bin_index=C:\\mysql-5.7.19-winx64\\data\\mysql-bin.index")])]),t._v(" "),a("li",[a("p",[t._v("可选项")]),t._v(" "),a("p",[t._v("binlog_format\t= statement\t\t\t\t\t#binlog日志格式，statement:基于语句(row:基于行、mixed:混合方式)")]),t._v(" "),a("p",[t._v("expire_logs_days    = 7         \t\t\t\t\t #binlog过期清理时间")])])]),t._v(" "),a("p",[t._v("​\t\tmax_binlog_size     = 100m       \t\t \t #binlog每个日志文件大小")]),t._v(" "),a("p",[t._v("​\t\tbinlog_cache_size    = 4m\t\t\t\t\t\t#binlog二进制缓存大小,跟binlog_stmt_cache_size 保持一直，所以调整通常stm")]),t._v(" "),a("p",[t._v("​\t\tmax_binlog_cache_size  = 512m       \t#最大binlog缓存大小，这个和max_binlog_stmt_cache_size通常不修改")]),t._v(" "),a("p",[t._v("​\t\tbinlog_stmt_cache_size                             \t#跟事务相关的二进制日志缓存的大小")]),t._v(" "),a("p",[t._v("sql_log_off :用于控制是否禁止将一般查询日志类信息记录进查询日志文件")]),t._v(" "),a("p",[t._v("sync_binlog： 设定多久同步一次二进制日志至磁盘文件中，0表示不同步，如5表示每5个写操作同步一次，当autocommit为1时，每条   语句的执行都会引起二进制日志同步，否则每个事务的提交会引起二进制日志同步")]),t._v(" "),a("p",[a("strong",[t._v("二进制日志格式")]),t._v("：")]),t._v(" "),a("p",[t._v("statement：根据执行语句，如select，但有些语句不同时间执行会获取不同的结果，就是非精确值")]),t._v(" "),a("p",[t._v("row：直接复制这个语句所执行的结果，值是精确的")]),t._v(" "),a("p",[t._v("mixed：混合方式")]),t._v(" "),a("p",[a("strong",[t._v("二进制日志文件：")])]),t._v(" "),a("p",[t._v("索引文件  ：mysql-bin.index")]),t._v(" "),a("p",[t._v("二进制日志文件  ：mysql-bin.000001(每次重启mysql服务，都会滚动一次，或手工滚动：flush logs)")]),t._v(" "),a("p",[t._v("​\t#flush logs只会滚动二进制日志，错误日志只会关闭在打开不会做滚动，其他日志同样道理；从服务器只会滚动中继日志，错误日志关闭在打开")]),t._v(" "),a("p",[a("strong",[t._v("查看当前使用的二进制日志文件")]),t._v("： show master status；")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("show master status：\nFile             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\n+------------------+----------+--------------+------------------+-------------------+\n\n| mysql-bin.000003 |      154 |              |                  |\nPosition：上一次数据库改变的位置，如insert、delete命令就可以改变position\n")])])]),a("p",[t._v("show binlog events in 'mysql-bin.000003'  [ from 123 ];")]),t._v(" "),a("p",[t._v("​\t\t#可以查看到该bin文件中相应的操作（5.7好像看不到具体执行的语句了）,从position 123开始")]),t._v(" "),a("p",[t._v("show binary logs:\t\t\t\t查看当前存在的二进制文件")]),t._v(" "),a("p",[a("strong",[t._v("删除二进制日志")])]),t._v(" "),a("p",[t._v("#不能rm删除，否则mysql下次启动可能会崩溃")]),t._v(" "),a("p",[t._v("mysql>"),a("strong",[t._v("purge")]),t._v(" binary logs to 'mysql-bin.000003';     #将mysql-bin.000003之前（不包含）的二进制日志删除")]),t._v(" "),a("p",[a("strong",[t._v("reset master")]),t._v(";   #清除主备信息；没有做主备同步的情况下，也可以使用这个命令，也能生效")]),t._v(" "),a("p",[a("strong",[t._v("mysqlbinlog：")])]),t._v(" "),a("p",[t._v("​\t\t--start-datetime")]),t._v(" "),a("p",[t._v("​\t\t--stop--datetime   (如果不指定，则到文件的尾部)")]),t._v(" "),a("p",[t._v("​")]),t._v(" "),a("p",[t._v("​\t\t--start-position")]),t._v(" "),a("p",[t._v("​\t\t--stop-position (如果不指定，则到文件的尾部)")]),t._v(" "),a("p",[t._v("mysqlbinlog --start-position=640 --stop-position=754 mysql-bin.000003  [ >/root/xxx ]")]),t._v(" "),a("p",[t._v('mysqlbinlog --start-datetime=**"**2017-09-14 19:34:20" --stop-datetime="2017-09-14 19:34:20" mysql-bin.000003(时间使用双引号括起来的，使用单引号会报错“ERROR: Incorrect date and time argument:”)')]),t._v(" "),a("h3",{attrs:{id:"中继日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中继日志"}},[t._v("#")]),t._v(" 中继日志")]),t._v(" "),a("p",[t._v("relay_log")]),t._v(" "),a("p",[t._v("从服务器需要把二进制文件复制一份保存到本地的文件中，中继日志仅仅是从服务器上要求要执行一遍的文件，格式和二进制日志一样;")]),t._v(" "),a("h3",{attrs:{id:"事务日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务日志"}},[t._v("#")]),t._v(" 事务日志")]),t._v(" "),a("p",[t._v("在有事务功能的存储引擎上存在（如innodb），用于保证原子性、一致性、隔离行和持久性，将随机IO转换为顺序IO")]),t._v(" "),a("p",[t._v("如将表中数据由30改为了50，现在想撤销，但是撤销必须要知道之前的数据是什么，这时候需要有事务日志,用户无法操作，引擎自己维护")]),t._v(" "),a("p",[t._v("innodb_locks_unsafe_for_binlog")]),t._v(" "),a("p",[t._v("innodb_flush_log_at_trx_commit =x：")]),t._v(" "),a("p",[t._v("​\t\t 0：每秒同步一次，并执行磁盘flush操作")]),t._v(" "),a("p",[t._v("​\t\t1：为每事务提交，并执行磁盘flush操作")]),t._v(" "),a("p",[t._v("​\t\t2：为每事务提交，但不执行磁盘flush操作  （性能好，但是有数据安全隐患）")]),t._v(" "),a("p",[t._v("innodb_log_buffer_size：日志缓冲大小")]),t._v(" "),a("p",[t._v("innodb_log_file_size  ：日志文件大小")]),t._v(" "),a("p",[t._v("innodb_log_files_in_group =2： 默认定义了2个文件，其他的也可以自己定义")]),t._v(" "),a("p",[t._v("innodb_log_group_home_dir：日志组所在的目录（文件好像是ib_logfile0和ib_logfile1）")]),t._v(" "),a("h2",{attrs:{id:"mysql数据备份、恢复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql数据备份、恢复"}},[t._v("#")]),t._v(" mysql数据备份、恢复")]),t._v(" "),a("p",[t._v("备份类型：")]),t._v(" "),a("ul",[a("li",[t._v("热备份：在线备份，读、写不受影响，因为可以写导致备份的数据不是某一时间点的，而是跨时间段的，导致出现问题时，不能拿来还原")]),t._v(" "),a("li",[t._v("温备份：能读不能写")]),t._v(" "),a("li",[t._v("冷备份：离线备份，不能读、写  （此时可以直接copy数据文件）")])]),t._v(" "),a("p",[t._v("完全备份、增量备份和差异备份：")]),t._v(" "),a("p",[t._v("mysql自带的备份工具：")]),t._v(" "),a("p",[t._v("​\t\tmysqldump：逻辑备份工具，myisam（温备份 --lock-all-tables）、innodb（热备份 single-transaction）；还原速度慢")]),t._v(" "),a("p",[t._v("​\t\tmysqlhotcopy：温备工具")]),t._v(" "),a("h3",{attrs:{id:"备份命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#备份命令"}},[t._v("#")]),t._v(" 备份命令")]),t._v(" "),a("p",[t._v("mysqldump常用参数")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("--master-date = {0|1|2}  （在xx.sql文件中有一行change master to 'mysql-bin.000x',position xx ）  ：用于记录二进制文件是什么，以及所处的位置")]),t._v(" "),a("p",[t._v("0:不记录二进制日志文件及位置")]),t._v(" "),a("p",[t._v("1：以change master to的方式记录位置，可用于恢复后直接启动从服务器")]),t._v(" "),a("p",[t._v("2，以change master to的方式记录位置，但默认 被注释（通常是这个，但是从服务器的要注意什么，忘记了？？？）")]),t._v(" "),a("p",[t._v("加上master-data的：mysqldump -uroot -p --master-data=2 jiaowu >/root/jiaowu-"),a("code",[t._v("date +%F-%H-%M-%S")]),t._v(".sql")])]),t._v(" "),a("li",[a("p",[t._v("--lock-all-tables: 备份之前先锁定所有表，就不用手工lock锁定了;不能和--single-transaction一起使用")])]),t._v(" "),a("li",[a("p",[t._v("--lock-tables ：只备份一张表的时候使用这个？？")])]),t._v(" "),a("li",[a("p",[t._v("--flush-logs ：执行日志滚动")])]),t._v(" "),a("li",[a("p",[t._v("--single-transaction： 如果指定库中所有表均为innodb,可以使用--single-transaction启用热备，此时就不用--lock-all-tables了")])]),t._v(" "),a("li",[a("p",[t._v("--all-databases; 备份所有库，会备份建库语句，还原的时候不用先建库了(作了完全备份后，以前的二进制文件可以删除，但是不建议这么做)")])]),t._v(" "),a("li",[a("p",[t._v("--databases db_name1,db_name2  备份多个库，会备份创建库语句，还原的时候不用先创建库了")]),t._v(" "),a("p",[t._v("mysqldump -uroot -p --master-data=2 --lock-all-tables --flush-logs --all-databases > /root/all.sql  (多次执行会覆盖all.sql)")])]),t._v(" "),a("li",[a("p",[t._v("补充性的：")]),t._v(" "),a("p",[t._v("--event：备份事件")]),t._v(" "),a("p",[t._v("--routines：备份存储过程和存储函数的")]),t._v(" "),a("p",[t._v("--triggers：备份触发器的")])])]),t._v(" "),a("p",[a("strong",[t._v("命令")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("mysqldump DB_name [tb1] [tb2]  (这种只备份一个数据库的方式，不包含创建数据库的命令，将来还原的时候要先创建数据库)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mysql > flush tables with read lock ;  或者先lock tables然后flush tables，加锁后只能读不能写，该客户端一退出锁就释放了(不能退)，该客户端不退其他客户端也不能写入数据\n\tmysql>flush tables；\n\tmysql>lock tables；\n\n\nmysql > flush logs;    先滚动下二进制日志，下面unlock之后才insert的语句可以配合这个二进制日志进行还原\nmysql > show binary logs;      #记录下当前正在使用的二进制文件，下面的--master-date参数可以自动记录\n\nmysql -uroot -p jiaowu >/root/jiaowu.sql      #备份\n\t#将数据库jiaowu备份到root下，回车输入密码即可；jiaowu.sql可以文本打开\nmysql < jiaowu.sql        #导入，要先创建jiaowu数据库，也可以改名 mysql new_jiaowu< jiaowu.sql\nmysql > unlock tables;        #解锁\n")])])])])]),t._v(" "),a("p",[t._v("mysqldump还原的时候尽量先把二进制日志关闭，因为还原的过程会产生大量的二进制日志，而这些是没有必要的；")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("处理方法：在当前mysql 的session下 set sql_log_bin=off或'=0'；(查询select @@sql_log_bin)这个是临时关闭生成当前session的二进制bin文件，现象是show master status的position不会在变化了\n\n在当前mysql 的session下执行sql文件（不要另外打开窗口）：mysql> source /root/jiaowu.sql或者 . /root/jiaowu.sql\n")])])]),a("p",[t._v("innodb在备份的时候可能后台还有buffer 没有写入，show engine innodb status;查看innodb的存储状态，里面没有数据的时候才能mysqldump备份，所以建议innodb使用-single-transcation备份")]),t._v(" "),a("h3",{attrs:{id:"第三方工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三方工具"}},[t._v("#")]),t._v(" 第三方工具")]),t._v(" "),a("p",[t._v("ibbackup：商业工具")]),t._v(" "),a("p",[t._v("xtrabackup：开源工具")]),t._v(" "),a("h3",{attrs:{id:"select-into备份"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select-into备份"}},[t._v("#")]),t._v(" select into备份")]),t._v(" "),a("p",[t._v("通常用来备份单张表")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select * into outfile '/tmp/tutor.txt' from tutors [where ...];    将tutors表的内容保存到/tmp/tutor.txt文件中，通常不要保存到/root下，因为mysql用户通常没有访问/root的权限\n\n\n恢复：\nload data infile '/tmp/tutor.txt' into table tutor;    表tutor的表格式要事先创建好\n")])])]),a("h2",{attrs:{id:"mysql无法启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql无法启动"}},[t._v("#")]),t._v(" mysql无法启动：")]),t._v(" "),a("p",[t._v("可能原因：")]),t._v(" "),a("ul",[a("li",[t._v("原来已经装过mysql，没有停止；\tkillall mysqld (killall mysqld_safe),如将mysql的$data目录全删除了，使用service     mysqld stop就会报错：mysql server pid file could not found ! 此时就要使用killall mysqld停用mysql")])]),t._v(" "),a("h2",{attrs:{id:"mysql的错误日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql的错误日志"}},[t._v("#")]),t._v(" mysql的错误日志：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$datadir下 hostname.err（本机为：DESKTOP-S2FSMKO.err）：一般mysql启动后的错误都会在这个日志里面\n    （该目录下还有一个PID：DESKTOP-S2FSMKO.pid）\n\n\n如果没有错误日志文件，\n    1，因为数据目录位置指定错了，编辑my.cnf，明确指定datadir的位置（datadir = C:\\mysql-5.7.19-winx64\\data），这样能保证错误日志能出现\n    2，将数据目录重新初始化一下\n")])])]),a("h2",{attrs:{id:"data-truncated问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-truncated问题"}},[t._v("#")]),t._v(" Data truncated问题：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mysql> alter table test modify xx varchar(20) not null ;\nERROR 1265 (01000): Data truncated for column 'xx' at row 1\n解决方法：http://blog.csdn.net/chwshuang/article/details/54945485（将字段中的值先更新为0，然后再更新）\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);