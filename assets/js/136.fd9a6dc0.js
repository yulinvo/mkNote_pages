(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{402:function(a,t,s){"use strict";s.r(t);var e=s(13),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[t("strong",[a._v("Str字符串")])]),a._v(" "),t("h2",{attrs:{id:"字符串类型判断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串类型判断"}},[a._v("#")]),a._v(" 字符串类型判断")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("name.isalnum()     \t\t\t#是否是字母或者数字\nname.isalpha()     \t\t\t#是否是字母\nname.isdecimal()     \t\t#是否是十进制小数     2.7好像没有\nname.isdigit()     \t\t\t#是否是数字\nname.isidentifier()     \t#好像是是否是关键字之类的\nname.islower()     \t\t\t#是否全部小写\nname.isnumeric()     \t\t#是否是数字\nname.isprinttable()     \t#是否可以打印tab么？？\nname.isspace()          \t#是否是空格\nname.istitle()          \t#给定的字符串是否是标题（标题通常首字母都是大写）\nname.isupper()          \t#是否全部大写\n")])])]),t("h2",{attrs:{id:"len"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#len"}},[a._v("#")]),a._v(" len")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("长度：len(obj)\n")])])]),t("h2",{attrs:{id:"索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[a._v("#")]),a._v(" 索引")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("索引：obj[1]     #str[1]\n")])])]),t("h2",{attrs:{id:"切片"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#切片"}},[a._v("#")]),a._v(" 切片")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("切片：obj[1:]、obj[1:10]     #str[1:5]\n")])])]),t("h2",{attrs:{id:"大小写"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#大小写"}},[a._v("#")]),a._v(" 大小写")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("首字母：\n    name.capitalize()           #首字母大写\n    name.casefold()             #首字母小写\n    name.swapcase()             #首字母大写小写互换\n\n操作整个字符串：\n\tname.upper()                #全部转换为大写\n\tname.lower()                #全部转换为小写\n")])])]),t("h2",{attrs:{id:"encode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#encode"}},[a._v("#")]),a._v(" encode")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("name.encode('gbk')               #编码\n")])])]),t("h2",{attrs:{id:"count"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#count"}},[a._v("#")]),a._v(" count")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("name.count('f',3,10)               #字符'f'字符出现的次数，后面可以跟起始位置和结束位置\n")])])]),t("h2",{attrs:{id:"expandtabs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expandtabs"}},[a._v("#")]),a._v(" expandtabs")]),a._v(" "),t("blockquote",[t("p",[a._v("将字符串中tab转换为指定数量的空格")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("name='Ad\\tfjasf'\nprint  name.expandtabs(5)          #将tab键转换为空格，默认是转换为8个空格\n")])])]),t("h2",{attrs:{id:"title"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#title"}},[a._v("#")]),a._v(" title")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("name='this is example'\nname.title()          #将首字母变为大写，结果为‘This Is Example’\n")])])]),t("h2",{attrs:{id:"strip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#strip"}},[a._v("#")]),a._v(" strip")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("移除空白：strip     #只能去除首尾的空白，字符中间的无法去除;另外好像也可以去除换行符\n\nname.strip()\nname.lstrip()               #去除左边的空格\nname.rstrip()               #去除右边的空格\n")])])]),t("h2",{attrs:{id:"split、partition"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#split、partition"}},[a._v("#")]),a._v(" split、partition")]),a._v(" "),t("p",[a._v("user,pawd=line.strip().split()")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# split返回的结果是list，partition返回的结果是tuple\n\trsplit               #从右开始\n\trpartition          #和partition类似，左右的区别\n\t\n\n示例：\n    name='alexistoms'\n    name.split('is')\t\t #结果['alex', 'toms']\n    name.partition('is') \t #结果('alex', 'is', 'toms')\n")])])]),t("h2",{attrs:{id:"splitlines"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#splitlines"}},[a._v("#")]),a._v(" splitlines")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("name='''\naa\nbb\ncc'''\nprint name.splitlines()     #输出结果['', 'aa', 'bb', 'cc']，效果同name.split('\\n')\n")])])]),t("h2",{attrs:{id:"center、ljust、rjust、zfill"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#center、ljust、rjust、zfill"}},[a._v("#")]),a._v(" center、ljust、rjust、zfill")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("name.center(20,'*')         #将字符串居中显示,效果为‘******Adfjasf*******’\nname.ljust(20,'*')\t\t\t#'abcd****************'\nname.rjust(20,'*')\t\t\t#'****************abcd'\n\nname.zfill(20)          \t#字符串补齐到长度20（左侧填0），如果字符串本身的长度已经超过20则不做改变\n")])])]),t("h2",{attrs:{id:"startwith、endswith"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#startwith、endswith"}},[a._v("#")]),a._v(" startwith、endswith")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("#返回的结果是布尔值\n\nname.endswith('sf',1,4)               #判断字符串是否已给定字符结尾,可以限定起始和结束位置(1<= <4)\nname.startwith     \t\t\t\t\t\t#以xx开头\n")])])]),t("h2",{attrs:{id:"find、index"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#find、index"}},[a._v("#")]),a._v(" find、index")]),a._v(" "),t("blockquote",[t("p",[a._v("查找指定字符所在的索引位置")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("name.find('s')                    #查找字符‘s’在name中的位置，也可以限定开始位置和结束位置\n    rfind     #从右向左查找\n    rindex     #从右向左查找\n\nname.index('as',2,10)               #和find类似，有点不同：如果字符没有找到，find报-1，index报valueerror\n")])])]),t("h2",{attrs:{id:"replice"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#replice"}},[a._v("#")]),a._v(" replice")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("name.replace('s','S',1)          #替换，name中有两处s，此时指定只替换第一处s\n")])])]),t("h2",{attrs:{id:"join"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[a._v("#")]),a._v(" join")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("li=['a','l','e','x']\nprint ''.join(li)               #字符串(此处的'')的拼接，join方法很常用\nprint '_'.join(li)               #以下划线相隔链接\n")])])]),t("h2",{attrs:{id:"maketrans、translate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maketrans、translate"}},[a._v("#")]),a._v(" maketrans、translate")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("#一次性替换多个字符串，如a->1, e->2 ...\n\nname.maketrans()      #和translate配合使用，作一个对应表，通过对应表进行替换，2.7没有\nname.translate()\n\n示例：\n\tname = 'this is string example ... wow!!!'\n\t\n    intab='aeiou'\t\t\t#替换前字符\n    outtab='12345'\t\t\t#替换后字符（a->1, e->2 ...）\n    trantab= name.maketrans(intab,outtab)\n    name.translate(trantab)\n")])])]),t("h2",{attrs:{id:"字符串格式化输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串格式化输出"}},[a._v("#")]),a._v(" 字符串格式化输出")]),a._v(" "),t("h3",{attrs:{id:"最常用的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最常用的方法"}},[a._v("#")]),a._v(" 最常用的方法")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("方式一")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("name= 'alex'\nprint \"i am is %s\" % name\n")])])])]),a._v(" "),t("li",[t("p",[a._v("方式二")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("name='Ad\\tfjasf {0} as {1}'\nprint name.format('xxxx','---')       #format字符串格式化\n\nname=\"Adfjasf {name} as {id}\"\nprint name.format(name='alex',id='100')     #这样也可以，传递参数\n")])])])])]),a._v(" "),t("h3",{attrs:{id:"string-template格式化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string-template格式化"}},[a._v("#")]),a._v(" string--Template格式化")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("from string import  Template        \n    s=Template('$who likes $what')     \n        #Address:$address\n        #Name:$name\n        ....\n    s.substitute(who='tim',what='kung pao')\n")])])]),t("h3",{attrs:{id:"jinja模板引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jinja模板引擎"}},[a._v("#")]),a._v(" jinja模板引擎")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("注意上面的例子，address、name。。。\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);