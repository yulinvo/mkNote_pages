(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{423:function(t,a,r){"use strict";r.r(a);var e=r(13),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"帮助文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#帮助文档"}},[t._v("#")]),t._v(" 帮助文档")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("print(re.__doc__)\t\t\t#查看帮助文档\n")])])]),a("h3",{attrs:{id:"正则语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则语法"}},[t._v("#")]),t._v(" 正则语法")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\\d    任意一个数字，0~9 中的任意一个\n\\D    \\d的反集，也就是非数字的任意一个字符，等同于[^\\d]\n\\w    任意一个字母或数字或下划线，也就是 A~Z,a~z,0~9,_ 中的任意一个\n\\W    \\w的反集，也就是[^\\w]\n\\s    空格、制表符、换页符等空白字符的其中任意一个\n\\S    \\s的反集，也就是[^\\s]\n\\b：匹配单词边界    (默认好像是以空格作为单词的边界)  ,也就是单词和空格之间的位置，符号本身不匹配任何字符; \n\\B：匹配非单词边界\n\\n:\n\\t:\n\n.    小数点可以匹配除了换行符\\n以外的任意一个字符\t\n\t#如果要匹配字符串中的'.'需要转义，如re.math(r'\\d\\.\\d','1.2')，如果不转义'1a2'也能匹配到re.search(r'\\d.\\d','1a2')\n[]: 一组数据，这个里面不用转义，如[0-5]和[012345]效果相同    如：[^()]：不包含左括号或者右括号，不是[^(|)]\n     如：匹配所有字符串数字@等邮箱合法字符：[a-zA-Z0-9@._]\n     #[]种的内容不需要转义！！！！！！！！！！！！！！！！\n     \t如匹配url示例：https://www.google.com/ 正则为： re.match('(?P<url>[\\w:./]+)',line)  #点'.'也不需要转义\n\n{m,}    表达式至少重复m次，比如\\w\\d{2,}可以匹配a12,_1111,M123等等\n?    匹配表达式0次或者1次，相当于{0,1}，比如a[cd]?可以匹配a,ac,ad\n+    表达式至少出现1次，相当于{1,}，比如a+b可以匹配ab,aab,aaab等等\n*    表达式出现0次到任意次，相当于{0,}，比如\\^*b可以匹配b,^^^b等等\n\n")])])]),a("h3",{attrs:{id:"match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[t._v("#")]),t._v(" match")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#match是从头开始匹配 !!!!\t\t\t有group()方法！！！！\n\n-------------------基本用法------------------------\nm=re.match('abc','abcdef')  && print m.group()    \t\t#print m.group() 打印匹配到的所有东西\n\t#match是从开头匹配，re.match('bc','abcdef')匹配不到\n\nm=re.match('[0-9]','75abced')    \n\t# 只能匹配到7; \n\t# ‘[0-9][0-9]’或'[0-9]*'能匹配到75; \n\t# '[0-9]{0,10}'匹配0-10次\n\n\n-------------------group/groups------------------------\ngroup、groups分组：\t\t\t\t#只有匹配的时候分组了才有意义，如(\\d)(\\d)这样才有意义！！！！\n\t1，groups()只有在分组后才会将结果放到groups中，如果没有分组即使能匹配到groups()也不会有结果的！！！！\n\t\t比如m =re.match('abc','abcdef')，其中group()有结果，groups()是空的\n\n示例一：\n\tm = re.match('(?P<year>[0-9]{4})/(?P<mouth>[0-9]{2})','2009/12')\t\n\t\tm.group()\t\t\t#输出'2009/12'\n\t\tm.group(0)\t\t\t#输出'2009/12'\n\t\tm.group(1)\t\t\t#输出'2009'\n\t\tm.group(2)\t\t\t#输出'12'\n\t\tm.group('year')\t\t#输出'2009'\n\t\tm.group('mouth')\t#输出'12'\n\t\t\n\t\tm.groups(n)\t\t\t#不传递参数、0、1、2、任意数字，结果都是输出('2009', '12')\n\t\t\t#m.groups()只有在分组后才会将结果放到groups中，如果没有分组即使能匹配到groups()也不会有结果，比如\n\t\t\t\n示例二：\n\tm=re.match('(a)b(c)','abcdef')\n\tm.group()\t\t\t\t\t#输出'abc'\n\tm.group(0)\t\t\t\t\t#输出'abc'\n\tm.group(1)\t\t\t\t\t#输出'a'\n\tm.group(2)\t\t\t\t\t#输出'c'\n\t\n\tm.groups(n)\t\t\t\t\t#不传递参数、0、1、2、任意数字，结果都是输出('a', 'c')\n")])])]),a("h3",{attrs:{id:"对分组命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对分组命名"}},[t._v("#")]),t._v(" 对分组命名")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("m=re.search('(?P<year>[0-9]{4})/(?P<mouth>[0-9]{2})','assafd 2009/12')\nm=re.search('(?P<last>\\w+),(?P<first>\\w+):(?P<phone>\\S+)','oldboy,Beijing:123')\n\n")])])]),a("h3",{attrs:{id:"贪婪-非贪婪模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#贪婪-非贪婪模式"}},[t._v("#")]),t._v(" 贪婪/非贪婪模式")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("content = 'Hello 1234567 is a number. Regex String'\nprint re.match('.*(\\d+).*', content).group(1)             #输出结果'7'\nprint re.match('.*?(\\d+).*', content).group(1)            #结果为'1234567'\n\nprint re.match('.*?(\\d+).*', content, flags=re.S).group(1)        # re.S设置'.'可以匹配换行符 \n")])])]),a("h3",{attrs:{id:"findall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#findall"}},[t._v("#")]),t._v(" findall")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#不是从头匹配，所有符合条件的都匹配出来，返回的是一个list列表 !!!\tfindall方法直接就出结果了，不用在m.group()调用了\n\nm=re.findall('[0-9]*','75aba123ce1d')  && print m\n\t#因为匹配的次数里面包含0次，将每个字符串都匹配了，结果为：  ['75', '', '', '', '123', '', '', '1', '', '']\n\t#m=re.findall('[0-9]{0,10}','75aba123ce1d') 效果同上\n\t#m=re.findall('[0-9]+','75aba123ce1d')\t&& print m，结果为： ['75', '123', '1']\n\t\n\t------贪婪模式、非贪婪模式--------\n\t#re.findall('[0-9]*','75aba123ce1d')\t==> ['75', '', '', '', '123', '', '', '1', '', '']\n\t#re.findall('[0-9]*?','75aba123ce1d')\t==> [‘’，'7','5', '', '', '','1', '2' ,'3', '', '', '1', '', '']\n\t\n\t#re.findall('[0-9]+','75aba123ce1d')\t==> ['75', '123', '1']\n\t#re.findall('[0-9]+?','75aba123ce1d')\t==> ['7', '5', '1', '2', '3', '1']\n\n\nre.findall('.','75aba123ce1d')\t\t#匹配单个字符\n\t#结果['7', '5', 'a', 'b', 'a', '1', '2', '3', 'c', 'e', '1', 'd']\n\nre.findall('.*','75aba123ce1d')\t\t#匹配任意字符，后面的''因为没有了，*包含了匹配0次，所以有一个''\n\t#结果['75aba123ce1d', '']\n\nre.findall('.+','75aba123ce1d')\t\t#结果['75aba123ce1d']\n\n\n分组时：\n\tre.findall('(\\d)(\\d)','75123ce1d')\t==>结果为：[('7', '5'), ('1', '2')]\n")])])]),a("h3",{attrs:{id:"search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#search"}},[t._v("#")]),t._v(" search")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#找到第一个即返回，不继续查找!!!\t\t\t有group()方法！！！！\n\nm=re.search('75','a75aba123ce1d')\n\t#m.group()\t\t结果为'75'\n\t#m.group(0)\t\t结果为'75'\n\nre.search(r'[0-9.a-z]{1,26}@[0-9.a-z]{1,20}.[0-9a-z]{1,8}',email)               #email的简单的合法性匹配\n\t# r   按照原生字符（不转义的形式）匹配，建议还是写上比较保险\n\t\nm = re.search('(?P<year>[0-9]{4})/(?P<mouth>[0-9]{2})','assafd 2009/12')\n\t#m.group(n)\t\t\t\t#参数为0、1、2参考上面的match案例，含义同\n\t#m.groups(n)\t\t\t#不传递参数、0、1、2、任意数字，结果都是输出('2009', '12')，与match案例同\n")])])]),a("h3",{attrs:{id:"sub"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sub"}},[t._v("#")]),t._v(" sub")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#替换，没有replace方法，只有sub方法;\tsub方法直接就出结果了，不用在m.group()调用了\n\nm=re.sub('a','A','a75aba123ce1d',count=2)\t\t#count=2只替换前2个\nprint m     #sub没有group方法\n")])])]),a("h3",{attrs:{id:"split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#split"}},[t._v("#")]),t._v(" split")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#split拆分；\tsplit方法直接就出结果了，不用在m.group()调用了\n\nre.split('[+-]', '1+2*3/4-2')\n")])])]),a("h3",{attrs:{id:"compile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compile"}},[t._v("#")]),t._v(" compile")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("p = re.compile('^[0-9]{2}')        \n\t#提前对匹配公式进行编译，如果文本很长(如超过10W行)，建议先编译在匹配，这样就只需编译一次，上面的模式是每次匹配都会编译\n\nm = p.match('1234567890')   或者：re.match(p,'123456').group()都可以\n\nprint m.group()                     #结果为12\n")])])]),a("h3",{attrs:{id:"flag位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flag位"}},[t._v("#")]),t._v(" flag位")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("re.I:     不区分大小写，如：m=re.search('[a-z]','AZC',flags=re.I)\nre.M:     多行匹配，影响 ^ 和 $;  默认匹配以\\n为结尾  re.search('^a.+$','alex \\njack\\nrain\\nli',flags=re.M)\nre.S:     re.S设置'.'可以匹配换行符，和 re.M的区别是什么？？？    \n")])])]),a("h3",{attrs:{id:"strat、end、span"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strat、end、span"}},[t._v("#")]),t._v(" strat、end、span")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('m = re.search(r"abc","123abc456abc789")\t\t\t# r   按照原生字符（不转义的形式）匹配，建议还是写上比较保险\n\nm.group()\t\t\t#\'abc\'\nm.start()\t\t\t#3\t\t\t匹配的起始index索引\nm.end()\t\t\t\t#6\t\t\t匹配的结束index索引\nm.span()\t\t\t#(3, 6)\t\t开始到结束的索引范围\n')])])])])}),[],!1,null,null,null);a.default=n.exports}}]);