(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{420:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("os.getcwd()                   #获取当前的工作目录，即当前puthon脚本的工作目录\nos.chdir('dirname')          #改变当前脚本的工作目录，相当于cd，切换目录必须要用这个\nos.curdir                     #返回当前目录：('.')；os的属性，不是方法，直接调用，返回'.'\nos.pardir                     #获取上级目录字符串名； os的属性，不是方法，直接调用，返回'..'\nos.chmod                        #修改文件权限\n\nos.mkdir('dir1')                     #生成单级目录，相当于mkdir dir1\nos.rmdir('dir1')                     #删除单级目录，相当于rmdir dir1\nos.makedirs('dir1/dir2/dir3')    #可生成多层递归目录， 中间不存在的目录也被建立起来， os.mkdir()没有上面这个功能，它只能一层一层地建目录。\nos.removedirs('dir1')              \n\t#若目录为空，则删除，并递归到上级目录，若也为空则删除，以此类推\n\t#和makedirs一次创建多个类似，removedirs一次可以删除多个目录\n\t#如果要删除，可以使用模块shutil的retree方法\n\n\nos.listdir('dir1')                   #列出指定文件夹下的所有子目录和文件，包括隐藏文件\nos.remove()                           #删除一个文件\nos.rename('oldname','newname')      #重命名文件/目录，newname不能存在\n\tos.rename('D://Viedo/123','123-')\t#会将改名后的文件存放到当前(执行代码)文件同级目录下，而不是D://Viedo/目录下！！\nos.stat('path/filename')            #获取文件/目录信息，修改时间、创建时间、大小\n\nos.sep\t\t\t\t#输出系统特定的路径分隔符，linux为'/'，win为‘\\\\’，python现在能够自动识别处理，哪种斜杠都可以\nos.linesep                            #输出系统使用的行终止符,linux为‘\\n’,win为'\\t\\n'\nos.pathsep                            #输出用于分割文件路径的字符串\nos.name                               #输出字符串指示当前使用平台。win--\x3e'nt',linux--\x3e'posix'\nos.environ                            #获取系统环境变量\n\nos.system()   #运行shell命令，直接显示；每执行一次，相当于单独开启了一个shell，执行完后kill掉了，所以更改目录的时候，在这cd了，下面的代码目录还是没变\nos.popen('').read()      #获取执行的结果，a=os.system('dir')，a是执行的状态码，如果要获取结果，a=os.popen('dir').read(),print (a)  a是字符串，但里面有换行符，而且2.x版本也要加()才显示正常？？？\n\n")])])]),t("h3",{attrs:{id:"path"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#path"}},[this._v("#")]),this._v(" path")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("os.path.abspath(path)                     #返回path规范化的绝对路径\n\t#print(os.path.abspath('123.py'))    会在'123.py'文件前加上当前的执行目录（不管当前目录下有没有'123.py'文件）\nos.path.split(path)                       #将path分割为目录和文件名二元组返回\nos.path.dirname(path)                     #返回path的目录，实际就是os.path.split(path)中的第一项\nos.path.basename(path)                    #返回path最后的文件名\nos.path.exists(path)                      #判断path是否存在\nos.path.isabs(path)                       #判断是否是绝对路径\nos.path.isdir(path)                       #判断path是否是一个存在的目录\nos.path.isfile(path)                      #判断path是否是一个存在的文件\nos.path.join(path1,path2,path3)           #将多个路径组合后返回，第一个绝对路径之前的参数将被忽略，\n\t#如os.path.join('a','/b','c')，结果为'/b\\\\c'，路径'a'被忽略了\nos.path.getatime(path)                    #返回path所指向的文件或者目录的最后存取时间\nos.path.getmtime(path)                    #返回path所指向的文件或者目录的最后修改时间\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);