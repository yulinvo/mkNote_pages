(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{392:function(t,n,s){"use strict";s.r(n);var e=s(13),a=Object(e.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[n("strong",[t._v("异常处理")])]),t._v(" "),n("blockquote",[n("p",[t._v("参考文档：https://www.bilibili.com/video/BV1ex411x7Em?p=425&spm_id_from=pageDriver")])]),t._v(" "),n("h2",{attrs:{id:"error和exception"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#error和exception"}},[t._v("#")]),t._v(" Error和Exception")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("异常范围的树状结构图：\n    Error的一般是错误，系统已经明确知道是错误而不是异常；\n    exception的一般是异常，系统不知道是什么问题，没有出现预期的结果\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("names = ['a','b']\ndata = {}\n\ntry:                        #try里面的语句只要有报错就不会往下执行了\n    names[2]\n    data['name']\n\nexcept IndexError as e:             #except会根据报错信息逐条查找，直到找到匹配的错误类型；另外except IndexError：print'xxx'也行，只是这样就写死了，\n    print 'IndexError:',e\nexcept KeyError as e:               # except 里的语句常有一个break\n    print 'KeyError',e\nexcept  Exception as e:\n    print \"未知错误\",e\nelse:                               #当没有任何错误的时候(try里面的都正常)，这行这个\n    print '一切正常'\nfinally:\n    print '不管有没有错误，都执行！'\nprint 'xxxx'                        # 后面的语句依然能够正常执行\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('try:\n    num = int(input("请输入一个整数: "))\n    result = 8/num\n    print(result)\nexcept ValueError:\n    print("请输入一个整数，而不是字母")\nexcept ZeroDivisionError as e:\t\t\t\t\t#具体的异常上也能使用as e这种写法\n\tprint(e,type(e),dir(e))\t\t\t\t\t\t#查看异常中都有哪些方法\n    print(\'数字0不能作为分母\')\nexcept Exception as e:\t\t\t\t\t\t\t#捕获未知异常\n    print(e)\nelse:\n    print("没有出现异常，程序正常执行；\'---没有异常才会执行的代码---\'")\nfinally:\n    print("无论是否出现异常，都会执行的代码")\n\n----------------------------------------------------------------------------\nexcept (ValueError, ZeroDivisionError):\t\t\t\t\t#同时捕获两个异常\n    print("输入数字类型不合法")\n\nexcept:  \t\t#和except Exception as e相比，这种写法不能捕获具体的异常信息，只能输出用户自定义的异常信息，就是下面这句\n    print("请输入一个整数，而不是字母")\n\n')])])]),n("p",[t._v("示例："),n("strong",[t._v("当前文件不存在时也不会停止执行（Exception中没有定义动作），只是如果文件不存在try中此语句后的代码不会执行！！！！")])]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("json"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("re\n\nos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("chdir"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'D://Viedo/QTDownloadRadio/'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nf "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'D://Viedo/QTDownloadRadio/download.dat'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'r'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf-8'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" line "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" re"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'西游记'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        linedict "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" json"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loads"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("line"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("linedict"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'uniqueId'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" linedict"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'programName'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\n        \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#即使QTDownloadRadio文件夹下没有此文件，依然会继续执行；只是如果文件不存在try中此语句后的代码不会执行！！！！！")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" Exception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#因为异常中没有定义动作，直接pass了！！！！！！！")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n")])])]),n("h2",{attrs:{id:"异常的传递性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#异常的传递性"}},[t._v("#")]),t._v(" 异常的传递性")]),t._v(" "),n("blockquote",[n("p",[t._v("参考文档：https://www.bilibili.com/video/BV1ex411x7Em?p=429&spm_id_from=pageDriver")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("#在主程序中去捕获异常，就不用每个函数都做异常处理了\t\t\n#很重要！！！！！！！！！！！！\n")])])]),n("h2",{attrs:{id:"自定义异常"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义异常"}},[t._v("#")]),t._v(" 自定义异常")]),t._v(" "),n("blockquote",[n("p",[t._v("参考文档：https://www.bilibili.com/video/BV1ex411x7Em?p=431&spm_id_from=pageDriver")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('def input_password():\n    pwd = input("请输入密码:")\n\n    if len(pwd) >=8 :\n        return pwd\n    print("主动抛出异常")\n    ex = Exception("密码长度不够") \t\t\t\t\t\t#定义一个异常实例\n    # ex = Exception("密码长度不够","你好")  \t\t\t   #Exception接收的是一个*args参数\n    raise ex\t\t\t\t\t\t\t\t\t#抛出异常实例，异常的参数是固定的，下面的例子中异常的参数是传递的\n\ntry:\n    input_password()\nexcept Exception as e:\n    print(e)\n\n----------------------------------------------------------------------------\nclass StoreError(Exception): \n    pass\n\ntry:\n    pass\nexcept Exception as e: \n    raise StoreError(e)\t\t\t#抛出异常实例，将e作为参数传递给StoreError(因为Exception接收的是一个*args参数)\n')])])]),n("p",[t._v("自定义异常：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("class MyExcepution(Exception):\n    def __init__(self,msg):\n        self.msg = msg\n\n    def __str__(self):          #这句也可以不写，默认是这种格式的\n        return  self.msg\n\ntry:\n    raise  MyExcepution('异常 xx')        #触发异常    def pause(self):  raise Exception(\"Not Implemented\")\nexcept MyExcepution as e:\n    print e\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);